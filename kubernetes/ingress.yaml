# Kubernetes Ingress for File Connector
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: file-connector-ingress
  namespace: file-connector
  labels:
    app: file-connector
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - file-connector.yourdomain.com
    secretName: file-connector-tls
  rules:
  - host: file-connector.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: file-connector-service
            port:
              number: 80
      - path: /health
        pathType: Exact
        backend:
          service:
            name: file-connector-service
            port:
              number: 80
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: file-connector-service
            port:
              number: 80

---
# Optional: Monitoring ingress for Grafana and Prometheus
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: file-connector-monitoring-ingress
  namespace: file-connector
  labels:
    app: file-connector
    component: monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: "File Connector Monitoring"
spec:
  tls:
  - hosts:
    - monitoring.file-connector.yourdomain.com
    secretName: monitoring-tls
  rules:
  - host: monitoring.file-connector.yourdomain.com
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090

---
# Basic auth secret for monitoring endpoints
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-auth
  namespace: file-connector
  labels:
    app: file-connector
    component: monitoring
type: Opaque
data:
  # htpasswd generated auth string
  # Default: admin:admin123
  # Generate with: htpasswd -nb admin admin123 | base64 -w 0
  auth: YWRtaW46JGFwcjEkSDdGN25zZm8kMkNnT2J2NGR5QW1kMkpZSGVHaENtLwo=