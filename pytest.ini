[tool:pytest]
# Pytest configuration for File Connector

# Minimum version
minversion = 7.0

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src/connector
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10
    --disable-warnings

# Markers for different test types
markers =
    unit: Unit tests
    integration: Integration tests  
    performance: Performance tests
    benchmark: Benchmark tests
    slow: Slow tests (mark with @pytest.mark.slow)
    requires_network: Tests that require network access
    requires_credentials: Tests that require real API credentials
    docker: Tests that require Docker
    kubernetes: Tests that require Kubernetes

# Test timeouts
timeout = 300

# Async test configuration
asyncio_mode = auto

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:google.*
    ignore::UserWarning:urllib3.*
    
# Environment variables for testing
env =
    CONNECTOR_ENVIRONMENT = testing
    CONNECTOR_LOG_LEVEL = DEBUG
    CONNECTOR_DATABASE_URL = sqlite:///:memory:
    CONNECTOR_MAX_CONCURRENT_SYNCS = 5

# Coverage configuration
[coverage:run]
source = src/connector
omit = 
    */tests/*
    */test_*
    */__init__.py
    */migrations/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov